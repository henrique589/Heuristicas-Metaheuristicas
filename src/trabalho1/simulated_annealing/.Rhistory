dim(esoph)
dim(esoph)[1]
#Comprimento
#se usar um objeto bidimensional vai retornar colunas
lenght(islands)
#Comprimento
#se usar um objeto bidimensional vai retornar colunas
length(islands )
#Nomes das colunas
colnames(esoph)
#Nome das linhas
rownames(esoph)
#Resumo
summary(esoph)
#Escolher arquivo
file.choose()
#Escolher arquivo
x = file.choose()
x
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
print(resultados)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
getwd()  # Retorna o diretório de trabalho atual
path = getwd()
#install.packages("jsonlite")
#install.packages("ggplot2")
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
print(resultados)
#Análise dos resultados do melhor custo de cada execução
ggplot(resultados, aes(x = execucao, y = melhor_custo)) +
geom_line(color = "lightgreen") +
geom_point(color = "orange") +
labs(title = "Melhor Custo por Execução", x = "Execução", y = "Melhor Custo") +
scale_x_continuous(breaks = seq(min(resultados$execucao), max(resultados$execucao), by = 1))
theme_minimal()
#Análise dos resultados do tempo de cada execução
ggplot(resultados, aes(x = execucao, y = tempo_execucao)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tempo de Execução por Execução", x = "Execução", y = "Tempo de Execução (s)") +
theme_minimal()
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
print(resultados)
#Análise dos resultados do melhor custo de cada execução
ggplot(resultados, aes(x = execucao, y = melhor_custo)) +
geom_line(color = "lightgreen") +
geom_point(color = "orange") +
labs(title = "Melhor Custo por Execução", x = "Execução", y = "Melhor Custo") +
scale_x_continuous(breaks = seq(min(resultados$execucao), max(resultados$execucao), by = 1))
theme_minimal()
#Análise dos resultados do tempo de cada execução
ggplot(resultados, aes(x = execucao, y = tempo_execucao)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tempo de Execução por Execução", x = "Execução", y = "Tempo de Execução (s)") +
theme_minimal()
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_mochila.json")
print(resultados)
#Análise dos resultados do melhor custo de cada execução
ggplot(resultados, aes(x = execucao, y = melhor_custo)) +
geom_line(color = "lightgreen") +
geom_point(color = "orange") +
labs(title = "Melhor Custo por Execução", x = "Execução", y = "Melhor Custo") +
scale_x_continuous(breaks = seq(min(resultados$execucao), max(resultados$execucao), by = 1))
theme_minimal()
#Análise dos resultados do tempo de cada execução
ggplot(resultados, aes(x = execucao, y = tempo_execucao)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tempo de Execução por Execução", x = "Execução", y = "Tempo de Execução (s)") +
theme_minimal()
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_mochila.json")
print(resultados)
#Tabelando os resultados
maior_valor = max(resultados$melhor_custo)
menor_valor = min(resultados$melhor_custo)
media = mean(resultados$melhor_custo)
resultados$maior_valor = maior_valor
resultados$menor_valor = menor_valor
resultados$media_valor = media_valor
resultados$maior_valor = maior_valor
resultados$menor_valor = menor_valor
resultados$media = media_valor
resultados$maior_valor = maior_valor
resultados$menor_valor = menor_valor
resultados$media = media
print(resultados)
do melhor custo de cada execução
#Análise dos resultados do melhor custo de cada execução
ggplot(resultados, aes(x = execucao, y = melhor_custo)) +
geom_line(color = "lightgreen") +
geom_point(color = "orange") +
labs(title = "Melhor Custo por Execução", x = "Execução", y = "Melhor Custo") +
scale_x_continuous(breaks = seq(min(resultados$execucao), max(resultados$execucao), by = 1))
theme_minimal()
#Análise dos resultados do tempo de cada execução
ggplot(resultados, aes(x = execucao, y = tempo_execucao)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tempo de Execução por Execução", x = "Execução", y = "Tempo de Execução (s)") +
theme_minimal()
print(resultados)
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_mochila.json")
print(resultados)
#Tabelando os resultados
maior_valor = max(resultados$melhor_custo)
menor_valor = min(resultados$melhor_custo)
media = mean(resultados$melhor_custo)
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
print(resultados)
#Tabelando os resultados
maior_valor = max(resultados$melhor_custo)
menor_valor = min(resultados$melhor_custo)
media = mean(resultados$melhor_custo)
resultados$maior_valor = maior_valor
resultados$menor_valor = menor_valor
resultados$media = media
print(resultados)
write.csv(resultados, "tabela_resultados_tsp.csv", row.names = FALSE)
#Análise dos resultados do melhor custo de cada execução
ggplot(resultados, aes(x = execucao, y = melhor_custo)) +
geom_line(color = "lightgreen") +
geom_point(color = "orange") +
labs(title = "Melhor Custo por Execução", x = "Execução", y = "Melhor Custo") +
scale_x_continuous(breaks = seq(min(resultados$execucao), max(resultados$execucao), by = 1))
theme_minimal()
#Análise dos resultados do tempo de cada execução
ggplot(resultados, aes(x = execucao, y = tempo_execucao)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tempo de Execução por Execução", x = "Execução", y = "Tempo de Execução (s)") +
theme_minimal()
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_mochila.json")
print(resultados)
#Tabelando os resultados
maior_valor = max(resultados$melhor_custo)
menor_valor = min(resultados$melhor_custo)
media = mean(resultados$melhor_custo)
resultados$maior_valor = maior_valor
resultados$menor_valor = menor_valor
resultados$media = media
print(resultados)
write.csv(resultados, "tabela_resultados_mochila.csv", row.names = FALSE)
#Análise dos resultados do melhor custo de cada execução
ggplot(resultados, aes(x = execucao, y = melhor_custo)) +
geom_line(color = "lightgreen") +
geom_point(color = "orange") +
labs(title = "Melhor Custo por Execução", x = "Execução", y = "Melhor Custo") +
scale_x_continuous(breaks = seq(min(resultados$execucao), max(resultados$execucao), by = 1))
theme_minimal()
#Análise dos resultados do tempo de cada execução
ggplot(resultados, aes(x = execucao, y = tempo_execucao)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tempo de Execução por Execução", x = "Execução", y = "Tempo de Execução (s)") +
theme_minimal()
print(resultados)
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
print(resultados)
#Tabelando os resultados
maior_valor = max(resultados$melhor_custo)
menor_valor = min(resultados$melhor_custo)
media = mean(resultados$melhor_custo)
resultados$maior_valor = maior_valor
resultados$menor_valor = menor_valor
resultados$media = media
print(resultados)
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
print(resultados)
#Tabelando os resultados
maior_valor = max(resultados$melhor_custo)
menor_valor = min(resultados$melhor_custo)
media = mean(resultados$melhor_custo)
resultados$maior_valor = maior_valor
resultados$menor_valor = menor_valor
resultados$media = media
print(resultados)
write.csv(resultados, "tabela_resultados_tsp.csv", row.names = FALSE)
#Análise dos resultados do melhor custo de cada execução
ggplot(resultados, aes(x = execucao, y = melhor_custo)) +
geom_line(color = "lightgreen") +
geom_point(color = "orange") +
labs(title = "Melhor Custo por Execução", x = "Execução", y = "Melhor Custo") +
scale_x_continuous(breaks = seq(min(resultados$execucao), max(resultados$execucao), by = 1))
theme_minimal()
#Análise dos resultados do tempo de cada execução
ggplot(resultados, aes(x = execucao, y = tempo_execucao)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tempo de Execução por Execução", x = "Execução", y = "Tempo de Execução (s)") +
theme_minimal()
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_mochila.json")
print(resultados)
#Tabelando os resultados
maior_valor = max(resultados$melhor_custo)
menor_valor = min(resultados$melhor_custo)
media = mean(resultados$melhor_custo)
resultados$maior_valor = maior_valor
resultados$menor_valor = menor_valor
resultados$media = media
print(resultados)
write.csv(resultados, "tabela_resultados_mochila.csv", row.names = FALSE)
#Análise dos resultados do melhor custo de cada execução
ggplot(resultados, aes(x = execucao, y = melhor_custo)) +
geom_line(color = "lightgreen") +
geom_point(color = "orange") +
labs(title = "Melhor Custo por Execução", x = "Execução", y = "Melhor Custo") +
scale_x_continuous(breaks = seq(min(resultados$execucao), max(resultados$execucao), by = 1))
theme_minimal()
#Análise dos resultados do tempo de cada execução
ggplot(resultados, aes(x = execucao, y = tempo_execucao)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tempo de Execução por Execução", x = "Execução", y = "Tempo de Execução (s)") +
theme_minimal()
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_mochila.json")
print(resultados)
#Tabelando os resultados
maior_valor = max(resultados$melhor_custo)
menor_valor = min(resultados$melhor_custo)
media = mean(resultados$melhor_custo)
resultados$maior_valor = maior_valor
resultados$menor_valor = menor_valor
resultados$media = media
print(resultados)
write.csv(resultados, "tabela_resultados_mochila.csv", row.names = FALSE)
#Análise dos resultados do melhor custo de cada execução
ggplot(resultados, aes(x = execucao, y = melhor_custo)) +
geom_line(color = "lightgreen") +
geom_point(color = "orange") +
labs(title = "Melhor Custo por Execução", x = "Execução", y = "Melhor Custo") +
scale_x_continuous(breaks = seq(min(resultados$execucao), max(resultados$execucao), by = 1))
theme_minimal()
#Análise dos resultados do tempo de cada execução
ggplot(resultados, aes(x = execucao, y = tempo_execucao)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tempo de Execução por Execução", x = "Execução", y = "Tempo de Execução (s)") +
theme_minimal()
#install.packages("jsonlite")
#install.packages("ggplot2")
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
#install.packages("jsonlite")
#install.packages("ggplot2")
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_tsp.json")
print(resultados)
#Tabelando os resultados
maior_valor = max(resultados$melhor_custo)
menor_valor = min(resultados$melhor_custo)
media = mean(resultados$melhor_custo)
resultados$maior_valor = maior_valor
resultados$menor_valor = menor_valor
resultados$media = media
print(resultados)
#Análise dos resultados do melhor custo de cada execução
ggplot(resultados, aes(x = execucao, y = melhor_custo)) +
geom_line(color = "lightgreen") +
geom_point(color = "orange") +
labs(title = "Melhor Custo por Execução", x = "Execução", y = "Melhor Custo") +
scale_x_continuous(breaks = seq(min(resultados$execucao), max(resultados$execucao), by = 1))
theme_minimal()
#Análise dos resultados do tempo de cada execução
ggplot(resultados, aes(x = execucao, y = tempo_execucao)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tempo de Execução por Execução", x = "Execução", y = "Tempo de Execução (s)") +
theme_minimal()
#install.packages("jsonlite")
#install.packages("ggplot2")
setwd('C:\\Users\\inffo\\Documents\\7ªPeriodo\\H&M\\HM\\src\\trabalho1\\simulated_annealing')
#Carregando as bibliotecas
library(jsonlite)
library(ggplot2)
#Carregando os dados
resultados = fromJSON("resultados_mochila.json")
print(resultados)
#Tabelando os resultados
maior_valor = max(resultados$melhor_custo)
menor_valor = min(resultados$melhor_custo)
media = mean(resultados$melhor_custo)
resultados$maior_valor = maior_valor
resultados$menor_valor = menor_valor
resultados$media = media
print(resultados)
#Análise dos resultados do melhor custo de cada execução
ggplot(resultados, aes(x = execucao, y = melhor_custo)) +
geom_line(color = "lightgreen") +
geom_point(color = "orange") +
labs(title = "Melhor Custo por Execução", x = "Execução", y = "Melhor Custo") +
scale_x_continuous(breaks = seq(min(resultados$execucao), max(resultados$execucao), by = 1))
theme_minimal()
#Análise dos resultados do tempo de cada execução
ggplot(resultados, aes(x = execucao, y = tempo_execucao)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tempo de Execução por Execução", x = "Execução", y = "Tempo de Execução (s)") +
theme_minimal()
